<?php
/**
 * Local Configuration Override
 *
 * This configuration override file is for overriding environment-specific and
 * security-sensitive configuration information. Copy this file without the
 * .dist extension at the end and populate values as needed.
 *
 * @NOTE: This file is ignored from Git by default with the .gitignore included
 * in ZendSkeletonApplication. This is a good practice, as it prevents sensitive
 * credentials from accidentally being committed into version control.
 */

return array(
  'modules' => array(
    'ZendDeveloperTools'
  ),
  // Whether or not to enable a configuration cache.
  // If enabled, the merged configuration will be cached and used in
  // subsequent requests.
  //'config_cache_enabled' => false,
  // The key used to create the configuration cache file name.
  //'config_cache_key' => 'module_config_cache',
  // The path in which to cache merged configuration.
  //'cache_dir' =>  './data/cache',
  // ...
  'doctrine' => array(
    'connection' => array(
      'odm_default' => array(
        'server' => '<% @db_host %>',
        'port' => '27017',
        <% if @db_user %>'user' => '<%= @db_user %>',<% end %>
        <% if @db_pass %>'password' => '<%= @db_pass %>',<% end %>
        'dbname' => '<%= @db_name %>'
      )
    ),
    'driver' => array(
      'odm_default' => array(
        'drivers' => array(
          'SelfService\Document' => 'annotation_driver'
        )
      ),
      'annotation_driver' => array(
        'class' => 'Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver',
        'cache' => 'array',
        'paths' => array(
          __DIR__ . '/../../module/SelfService/src/SelfService/Document'
        )
      )
    ),
    'configuration' => array(
      'odm_default' => array(
        'default_db' => '<%= @db_name %>'
      )
    )
  ),
  'caching' => array(
    'servers' => array(<% @memcached_servers.each do |memcached_server| %>
      array('host' => '<%= memcached_server.split(':').first %>', 'port' => <%= memcached_server.split(':').last %>)
    <% end %>),
  ),
  'rsss' => array(
    'hostname' => '<%= @hostname %>',
    'cloud_credentials' => array(
      'rightscale' => array(
        'email'       => '<%= @rs_email %>',
        'password'    => '<%= @rs_pass %>',
        'account_id'  => '<%= @rs_acct_num %>'
      ),
      'owners' => array(<% @owners.each do |owner| %>
        '<%= owner.split(':').first %>' => '<%= owner.split(':').last %>',
      <% end %>),
    ),
    'provisioner_class' => 'SelfService\Provisioner\RsApiProvisioner',
  ),
);
